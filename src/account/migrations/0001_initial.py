# Generated by Django 3.2.4 on 2022-03-01 13:52

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('guid', models.UUIDField(default=uuid.UUID('ba3e27dd-1d2e-432e-a8ad-1f46425738c4'), editable=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15)),
                ('region', models.CharField(choices=[('andijan', 'andijan'), ('bukhara', 'bukhara'), ('djizzak', 'djizzak'), ('fergana', 'fergana'), ('kashkadarya', 'kashkadarya'), ('khorezm', 'khorezm'), ('namangan', 'namangan'), ('navoi', 'navoi'), ('samarkand', 'samarkand'), ('surkhandarya', 'surkhandarya'), ('syrdarya', 'syrdarya'), ('tashkent_region', 'tashkent_region'), ('tashkent_city', 'tashkent_city'), ('karakalpakistan', 'karakalpakistan')], max_length=20)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('street', models.CharField(max_length=120)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('user_type', models.CharField(choices=[('admin', 'admin'), ('consumer', 'consumer'), ('technician', 'technician')], max_length=15)),
                ('user_status', models.CharField(choices=[('active', 'active'), ('blocked', 'blocked'), ('restricted', 'restricted')], default='active', max_length=15)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
